:root {
  --clr-primary-100: hsl(4, 100%, 67%);

  --clr-neutral-100: hsl(0, 0%, 100%);
  --clr-neutral-200: hsl(231, 7%, 60%);
  --clr-neutral-300: hsl(235, 18%, 26%);
  --clr-neutral-400: hsl(234, 29%, 20%);

  --ff-body: "Roboto", sans-serif;

  --fs-standart: 16px;

  --fw-regular: 400;
  --fw-bold: 700;
  --fw-extra-bold: 900;

  /* Special variables for spacing */
  --size-100: 0.25rem;
  --size-200: 0.5rem;
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.5rem;
  --size-600: 2rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;
}

/* Reseter */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Creating core default body height  */
html,
body {
  font-size: var(--fs-standart);
  font-family: var(--ff-body);
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--clr-neutral-300);
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

ul {
  list-style-type: none;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

p {
  margin-top: var(--size-400);
  width: 40ch;
}
/* Utility Class */

.text-center {
  text-align: center;
}

.mt-1 {
  margin-top: var(--size-100);
}

.mt-2 {
  margin-top: var(--size-200);
}

.mt-3 {
  margin-top: var(--size-300);
}

.mt-4 {
  margin-top: var(--size-400);
}

.mt-5 {
  margin-top: var(--size-500);
}

.mb-2 {
  margin-bottom: var(--size-200);
}

.margin-block--start-2 {
  margin-block-start: 2rem;
}

.hidden {
  display: none;
}

/* Mainland */

.container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-width: 1440px;
  background-color: var(--clr-neutral-100);
  border-radius: 2rem;
}

@media (max-width: 50em) {
  .container {
    display: flex;
    flex-direction: column;
    border-radius: 0;
  }

  p {
    width: 34ch;
  }
}

/* Form Side */

.form-wrapper {
  padding-top: var(--size-500);
  display: flex;
  flex-direction: column;
  margin-inline: auto;
  margin-block-start: var(--size-900);
}

@media (max-width: 50em) {
  /* when it comes to a give a div inline padding there is a high change to brake even columns spacing and img */
  /* Your method should be reduce target div size with the width and align with margin-inline auto*/
  .form-wrapper {
    margin-block-start: 0;
    padding-top: var(--size-500);
    order: 2;
    padding-bottom: var(--size-700);
    width: 80%;
  }
}

.form-title {
  letter-spacing: 1px;
  color: var(--clr-neutral-400);
  font-weight: var(--fw-bold);

  /* You can lay element specificly */
  font-size: 54px;
}

@media (max-width: 50em) {
  .form-title {
    font-size: 34px;
  }
}

.form-mid-section {
  color: var(--clr-neutral-300);
}

.list li {
  display: flex;
  gap: var(--size-300);
  margin-bottom: var(--size-300);
}

.sub_title {
  display: flex;
  justify-content: space-between;
}

.sub_title label {
  font-size: 10px;
  font-weight: var(--fw-bold);
  color: var(--clr-neutral-400);
}

.invali {
  display: none;
}

.invalid {
  display: block;
  font-size: 10px;
  font-weight: var(--fw-bold);
  color: rgb(222, 33, 33, 0.7);
}

.form-inner-wrapper {
  display: flex;
  flex-direction: column;
  gap: var(--size-500);
}

input:where([type="email"]) {
  cursor: pointer;
  color: var(--clr-neutral-200);
  border-radius: 0.5rem;
  border: 0.1px solid var(--clr-neutral-200);
  padding: var(--size-400) var(--size-400);
}

.silly_boy {
  background-color: hsla(0, 100%, 80%, 0.5);
  border: 1px solid red;
  color: rgb(222, 33, 33, 0.7);
}

.button {
  cursor: pointer;
  border: 0;
  border-radius: 0.5rem;
  background-color: var(--clr-neutral-400);
  color: var(--clr-neutral-100);
  padding: var(--size-400) var(--size-400);
}

.button:hover {
  color: var(--clr-neutral-100);
  background-color: var(--clr-primary-100);
}

/* IMG */

.image-wrapper {
  /* Here instead img itself we forced img wrapper specific high and told to img follow your parrent */
  /* When you face unnecessary padding and margin problem plese look even colum as well especially with
    flex and grid */
  max-height: 620px;
  padding: var(--size-500);
}

.illustration {
  width: 100%;
  height: 100%;
}

.illustration-mobile {
  display: none;
}

@media (max-width: 50em) {
  .illustration-mobile {
    display: block;
  }

  .image-wrapper {
    padding: 0;
  }

  .illustration {
    display: none;
  }
}

/* Success */

.success {
  background-color: var(--clr-neutral-100);
  border-radius: 1.5rem;
}
@media (max-width: 50em) {
  .success {
    border-radius: 0;
  }
}
.success-wrapper {
  display: flex;
  gap: 1rem;
  flex-direction: column;
  padding: var(--size-600) var(--size-700);
  padding-bottom: var(--size-700);
}

@media (max-width: 50em) {
  .success-wrapper {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    height: 70vh;
  }

  /* Grid specification */

  .icon-success {
    width: 55px !important;
    height: 55px !important;
    align-self: start;
    grid-area: 2/1/2/1;
  }
  .success-title {
    grid-area: 2/1/2/1;
    align-self: end;
  }
  .success-p {
    grid-area: 3/1/3/1;
    align-self: start;
  }

  .button {
    grid-area: 5/-1/5/-1;
  }
}

.icon-success {
  width: 45px;
  height: 45px;
}

.success-title {
  max-width: 14ch;
  letter-spacing: 1px;
  color: var(--clr-neutral-400);
  font-weight: var(--fw-bold);

  /* You can lay element specificly */
  font-size: 40px;
}

.success-p {
  width: 40ch;
  font-size: 16px;
  color: var(--clr-neutral-300);
  padding-bottom: var(--size-300);
}

.success_span {
  font-weight: var(--fw-bold);
}
